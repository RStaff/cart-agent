import "dotenv/config";
import express from "express";
import { PrismaClient } from "@prisma/client";
import { composeRecovery } from "./lib/composeRecoveryMessage.js";

const prisma = new PrismaClient();
const app = express();
app.use(express.json());

app.post("/api/abandoned-cart", async (req, res) => {
  console.log("[abandoned-cart] got body:", req.body);
  try {
    const { checkoutId, email, lineItems, totalPrice } = req.body;
    const record = await prisma.abandonedCart.create({
      data: { checkoutId, email, lineItems, totalPrice },
    });
    console.log("[abandoned-cart] saved:", record);

    const recoveryMessage = await composeRecovery({
      name: email,
      items: lineItems.map((i) => i.title),
      total: totalPrice,
    });
    console.log("✉️  Recovery message:", recoveryMessage);

    return res.status(201).json(record);
  } catch (error) {
    console.error("[abandoned-cart] error saving:", error);
    return res.status(500).send("Internal Server Error");
  }
});

if (import.meta.url === `file://${process.argv[1]}`) {
  const PORT = process.env.PORT || 3000;
  app.listen(PORT, () => {
    console.log(`[local] webhook receiver listening at http://localhost:${PORT}`);
  });
}

export default app;
