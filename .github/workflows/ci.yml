name: Verify deps & lockfile

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  deps-check:
    runs-on: ubuntu-latest
    env:
      # Stop lifecycle hooks from running in CI for this job
      HUSKY: "0"
      NPM_CONFIG_FUND: "false"
      NPM_CONFIG_AUDIT: "false"
    steps:
      - uses: actions/checkout@v4

      - name: Repo snapshot
        shell: bash
        run: |
          set -e
          echo "pwd: $(pwd)"
          echo "HEAD: $(git rev-parse --short HEAD)"
          echo "Top-level files:"
          ls -la
          echo "package.json locations (depth ≤ 3):"
          find . -maxdepth 3 -name package.json -print | sort

      - uses: actions/setup-node@v4
        with:
          # Align with your template’s engines (Shopify template expects 20.x)
          node-version: '20'
          cache: 'npm'

      - name: Dependency / lockfile check (self-contained)
        id: deps
        shell: bash
        run: |
          set -Eeuo pipefail
          shopt -s nullglob

          roots=()
          for r in . web web/frontend; do
            [ -f "$r/package.json" ] && roots+=("$r")
          done

          if [ ${#roots[@]} -eq 0 ]; then
            echo "ℹ️ No package.json found — nothing to check."
            exit 0
          fi

          echo "Roots to check: ${roots[*]}"
          fail=0

          for r in "${roots[@]}"; do
            echo
            echo "── Checking: $r"
            if [ -f "$r/package-lock.json" ]; then
              echo "+ npm ci --ignore-scripts --dry-run (in $r)"
              if ! npm --prefix "$r" ci --ignore-scripts --dry-run 1>"npm-ci.$(echo "$r" | tr '/.' '__').out" 2>"npm-ci.$(echo "$r" | tr '/.' '__').err"; then
                echo "❌ npm lockfile mismatch in: $r"
                fail=1
              fi
            elif [ -f "$r/yarn.lock" ]; then
              echo "+ yarn install --frozen-lockfile --ignore-scripts (in $r)"
              (cd "$r" && corepack enable >/dev/null 2>&1)
              if ! (cd "$r" && yarn install --frozen-lockfile --ignore-scripts --non-interactive) 1>"yarn-ci.$(echo "$r" | tr '/.' '__').out" 2>"yarn-ci.$(echo "$r" | tr '/.' '__').err"; then
                echo "❌ yarn lockfile mismatch in: $r"
                fail=1
              fi
            else
              echo "⚠️ No lockfile in $r — skipping lockfile consistency check."
            fi
          done

          if [ "$fail" -ne 0 ]; then
            echo
            echo "Guidance:"
            echo "• Run 'npm install' (or 'yarn install') locally at the failing root to refresh the lockfile,"
            echo "  commit the updated lockfile, and push again."
            exit 1
          fi

      - name: Upload install logs (if any failures)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: deps-check-logs
          path: |
            npm-ci.*.out
            npm-ci.*.err
            yarn-ci.*.out
            yarn-ci.*.err
          if-no-files-found: ignore
